# GENERATED BY go-gen-graphql-schema
directive @goModel(
  model: String
  models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION


type Query @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.Query") {
  query_example: TypeExample
}

type Mutation @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.Mutation") {
  example_mutation: MutationExample
}

type TypeExample @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.TypeExample") {
  id: ID!
  field_string: String!
  field_nullable_srinrg: String
  field_int: Int!
  field_nullable_int: Int
  field_float: Float!
  field_nullable_float: Float
  field_boolean: Boolean!
  field_nullable_boolean: Boolean
  field_map: Map!
  field_user_defined_scalar: YesNo!
  field_nullable_user_defined_scalar: YesNo
  field_user_defined_enum: MyEnum!
  field_struct: ComplexField!
  field_nullable_complex: ComplexField
  field_interface: ComplexInterface!
  field_array: [String!]
  field_nullable_element_array: [String]
  field_array_of_array: [[[String]]]
  fieldWithTag: String
  embedded_field: EmbeddedField!
  method_with_context(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  method_without_context(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  method_without_error(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  method_with_alias(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  method_with_result(
    complexQueryParams: ComplexResultInput
  ): ComplexResult
}

type MutationExample @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.MutationExample") {
  method_with_context(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  method_without_context(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  method_with_custom_scalar_and_enum(
    y: YesNo!,
    v: MyEnum!
  ): ComplexResult
  method_with_context_alias(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
}

scalar Map

scalar YesNo @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.YesNo")

enum MyEnum @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.MyEnum") {
  ValueA
  ValueB
}

type ComplexField @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.ComplexField") {
  field_string: String!
  field_nullable_srinrg: String
}

type ComplexInterface @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.ComplexInterface") {
  field_like_method: [String!]
  method_to_call(
    aa: String!
  ): ComplexField!
}

type EmbeddedField @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.EmbeddedField") {
  embedded_field_string: String!
  embedded_field_nullable_srinrg: String
}

type ComplexResult @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.ComplexResult") {
  field_string: String!
  field_nullable_srinrg: String
}

input ComplexParamsInput @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.ComplexParams") {
  field_string: String!
  field_nullable_srinrg: String
  field_struct: NestedComplexParamsInput!
}

input ComplexResultInput @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.ComplexResult") {
  field_string: String!
  field_nullable_srinrg: String
}

input NestedComplexParamsInput @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.NestedComplexParams") {
  field: String!
  field_struct: DeepNestedComplexParamsInput!
}

input DeepNestedComplexParamsInput @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.DeepNestedComplexParams") {
  field: String!
}
