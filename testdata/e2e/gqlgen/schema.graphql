# GENERATED BY go-gen-graphql-schema
directive @goModel(
  model: String
  models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION


type Query @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.Query") {
  queryExample: TypeExample
}

type Mutation @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.Mutation") {
  exampleMutation: MutationExample
}

type TypeExample @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.TypeExample") {
  id: ID!
  fieldString: String!
  fieldNullableSrinrg: String
  fieldInt: Int!
  fieldNullableInt: Int
  fieldFloat: Float!
  fieldNullableFloat: Float
  fieldBoolean: Boolean!
  fieldNullableBoolean: Boolean
  fieldMap: Map!
  fieldUserDefinedScalar: YesNo!
  fieldNullableUserDefinedScalar: YesNo
  fieldUserDefinedEnum: MyEnum!
  fieldStruct: ComplexField!
  fieldNullableComplex: ComplexField
  fieldInterface: ComplexInterface!
  fieldArray: [String!]
  fieldNullableElementArray: [String]
  fieldArrayOfArray: [[[String]]]
  fieldWithTag: String
  embeddedField: EmbeddedField!
  methodWithContext(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  methodWithoutContext(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  methodWithoutError(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  methodWithAlias(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  methodWithResult(
    complexQueryParams: ComplexResultInput
  ): ComplexResult
}

type MutationExample @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.MutationExample") {
  methodWithContext(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  methodWithoutContext(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
  methodWithContextAlias(
    complexQueryParams: ComplexParamsInput
  ): ComplexResult
}

scalar Map

scalar YesNo @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.YesNo")

enum MyEnum @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.MyEnum") {
  ValueA
  ValueB
}

type ComplexField @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.ComplexField") {
  fieldString: String!
  fieldNullableSrinrg: String
}

type ComplexInterface @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.ComplexInterface") {
  fieldLikeMethod: [String!]
  methodToCall(
    aa: String!
  ): ComplexField!
}

type EmbeddedField @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.EmbeddedField") {
  embeddedFieldString: String!
  embeddedFieldNullableSrinrg: String
}

type ComplexResult @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.ComplexResult") {
  fieldString: String!
  fieldNullableSrinrg: String
}

input ComplexParamsInput @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.ComplexParams") {
  fieldString: String!
  fieldNullableSrinrg: String
  fieldUserDefinedScalar: YesNo!
  fieldNullUserDefinedScalar: YesNo
  fieldEnum: MyEnum!
  fieldNullableEnum: MyEnum
  fieldStruct: NestedComplexParamsInput!
}

input ComplexResultInput @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.ComplexResult") {
  fieldString: String!
  fieldNullableSrinrg: String
}

input NestedComplexParamsInput @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.NestedComplexParams") {
  field: String!
  fieldStruct: DeepNestedComplexParamsInput!
  fieldUserDefinedScalar: YesNo!
  fieldNullUserDefinedScalar: YesNo
  fieldEnum: MyEnum!
  fieldNullableEnum: MyEnum
}

input DeepNestedComplexParamsInput @goModel(model: "github.com/yssk22/go-generators/testdata/e2e/models.DeepNestedComplexParams") {
  field: String!
}
